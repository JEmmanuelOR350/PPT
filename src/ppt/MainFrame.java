/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ppt;

import java.awt.*;
import javax.swing.*;
import java.util.*;
import java.io.*;

public class MainFrame extends javax.swing.JFrame {
    public MainFrame() {
        initComponents();
        //sobreescribirRecordNivel(0,0);
        leerRecordNivel();
        System.out.print("Nivel: "+Nivel+"Record: "+Record+"\n");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelImagenCPU = new javax.swing.JLabel();
        labelImagenJug = new javax.swing.JLabel();
        buttonPiedra = new javax.swing.JButton();
        buttonPapel = new javax.swing.JButton();
        buttonTijeras = new javax.swing.JButton();
        labelTituloPlayer = new javax.swing.JLabel();
        labelTituloCPU = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cajaNivel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cajaRecord = new javax.swing.JFormattedTextField();
        cajaResultado = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(202, 243, 147));
        setMaximumSize(new java.awt.Dimension(500, 400));
        setMinimumSize(new java.awt.Dimension(500, 400));
        setPreferredSize(new java.awt.Dimension(500, 400));
        setSize(new java.awt.Dimension(500, 400));

        labelImagenCPU.setBackground(new java.awt.Color(242, 75, 75));
        labelImagenCPU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Framevacio.png"))); // NOI18N
        labelImagenCPU.setText("jLabel1");
        labelImagenCPU.setMaximumSize(new java.awt.Dimension(150, 150));
        labelImagenCPU.setMinimumSize(new java.awt.Dimension(150, 150));
        labelImagenCPU.setOpaque(true);
        labelImagenCPU.setPreferredSize(new java.awt.Dimension(150, 150));

        labelImagenJug.setBackground(new java.awt.Color(118, 178, 219));
        labelImagenJug.setForeground(new java.awt.Color(255, 102, 102));
        labelImagenJug.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Framevacio.png"))); // NOI18N
        labelImagenJug.setText("jLabel1");
        labelImagenJug.setMaximumSize(new java.awt.Dimension(150, 150));
        labelImagenJug.setMinimumSize(new java.awt.Dimension(150, 150));
        labelImagenJug.setOpaque(true);
        labelImagenJug.setPreferredSize(new java.awt.Dimension(150, 150));

        buttonPiedra.setBackground(new java.awt.Color(190, 234, 228));
        buttonPiedra.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        buttonPiedra.setText("Piedra");
        buttonPiedra.setMaximumSize(new java.awt.Dimension(75, 30));
        buttonPiedra.setMinimumSize(new java.awt.Dimension(75, 30));
        buttonPiedra.setPreferredSize(new java.awt.Dimension(75, 30));
        buttonPiedra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonPiedraMouseClicked(evt);
            }
        });

        buttonPapel.setBackground(new java.awt.Color(190, 234, 228));
        buttonPapel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        buttonPapel.setText("Papel");
        buttonPapel.setMaximumSize(new java.awt.Dimension(75, 30));
        buttonPapel.setMinimumSize(new java.awt.Dimension(75, 30));
        buttonPapel.setPreferredSize(new java.awt.Dimension(75, 30));
        buttonPapel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonPapelMouseClicked(evt);
            }
        });

        buttonTijeras.setBackground(new java.awt.Color(190, 234, 228));
        buttonTijeras.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        buttonTijeras.setText("Tijeras");
        buttonTijeras.setMaximumSize(new java.awt.Dimension(75, 30));
        buttonTijeras.setMinimumSize(new java.awt.Dimension(75, 30));
        buttonTijeras.setPreferredSize(new java.awt.Dimension(75, 30));
        buttonTijeras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonTijerasMouseClicked(evt);
            }
        });

        labelTituloPlayer.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        labelTituloPlayer.setText("Jugador:");

        labelTituloCPU.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        labelTituloCPU.setText("Computadora:");

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Record");

        cajaNivel.setBackground(new java.awt.Color(237, 237, 78));
        cajaNivel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        cajaNivel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cajaNivel.setMaximumSize(new java.awt.Dimension(90, 30));
        cajaNivel.setMinimumSize(new java.awt.Dimension(90, 30));
        cajaNivel.setOpaque(true);
        cajaNivel.setPreferredSize(new java.awt.Dimension(90, 30));

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Nivel");

        cajaRecord.setBackground(new java.awt.Color(237, 237, 78));
        cajaRecord.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cajaRecord.setAutoscrolls(false);
        cajaRecord.setFocusable(false);
        cajaRecord.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cajaRecord.setMaximumSize(new java.awt.Dimension(90, 30));
        cajaRecord.setMinimumSize(new java.awt.Dimension(90, 30));
        cajaRecord.setOpaque(true);
        cajaRecord.setPreferredSize(new java.awt.Dimension(90, 30));
        cajaRecord.setRequestFocusEnabled(false);

        cajaResultado.setFont(new java.awt.Font("SansSerif", 0, 22)); // NOI18N
        cajaResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cajaResultado.setMaximumSize(new java.awt.Dimension(332, 30));
        cajaResultado.setMinimumSize(new java.awt.Dimension(332, 30));
        cajaResultado.setPreferredSize(new java.awt.Dimension(332, 30));

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Resultado");
        jLabel3.setMaximumSize(new java.awt.Dimension(332, 30));
        jLabel3.setMinimumSize(new java.awt.Dimension(332, 30));
        jLabel3.setPreferredSize(new java.awt.Dimension(332, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(buttonPapel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTijeras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelImagenJug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTituloPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelImagenCPU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelTituloCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cajaRecord, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cajaNivel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cajaResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addComponent(buttonPiedra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonPiedra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cajaResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(labelTituloPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                .addComponent(labelTituloCPU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelImagenJug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelImagenCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cajaRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(26, 26, 26)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cajaNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(268, 268, 268)
                            .addComponent(buttonPapel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonTijeras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPiedraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonPiedraMouseClicked
        colocar_img_jug(1);
        ele_jug = 1;
        ele_cpu = ElRandominizador();
        colocar_img_cpu(ele_cpu);
        refGanador(ele_jug, ele_cpu);
    }//GEN-LAST:event_buttonPiedraMouseClicked

    private void buttonPapelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonPapelMouseClicked
        colocar_img_jug(2);
        ele_jug = 2;
        ele_cpu = ElRandominizador();
        colocar_img_cpu(ele_cpu);
        refGanador(ele_jug, ele_cpu);
    }//GEN-LAST:event_buttonPapelMouseClicked

    private void buttonTijerasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonTijerasMouseClicked
        colocar_img_jug(3);
        ele_jug = 3;
        ele_cpu = ElRandominizador();
        colocar_img_cpu(ele_cpu);
        refGanador(ele_jug, ele_cpu);
    }//GEN-LAST:event_buttonTijerasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    private void colocar_img_jug(int nomImg){
        labelImagenJug.setIcon(crear_img(nomImg));
    }
    
    private void colocar_img_cpu(int nomImg){
        labelImagenCPU.setIcon(crear_img(nomImg));
    }
    
    private Icon crear_img(int forma){
        ImageIcon img = new ImageIcon(getClass().getResource("/ppt/img/"+elecciones.get(forma)+".png"));
        Icon imgicon = new ImageIcon(img.getImage().getScaledInstance(labelImagenJug.getWidth(), labelImagenJug.getHeight(), Image.SCALE_DEFAULT));
        return imgicon;
    }
    
    private static HashMap<Integer, String> InicializarMapa() {
    HashMap<Integer,String> mapa = new HashMap<Integer,String>();
    mapa.put(1, "Piedra");
    mapa.put(2, "Papel");
    mapa.put(3, "Tijeras");
    return mapa;
    }
    
    public int ElRandominizador(){
        SplittableRandom rand = new SplittableRandom();
        int num = 1 + rand.nextInt(3);
        return num;
    }
    
    public void refGanador(int vJug, int vCpu){
        if(vJug == vCpu){eventEmpate();}
        else{
            if(vJug == 1){
                if(vCpu == 2){
                    eventPerder();
                }else{
                    eventGanar();
                }
            }else if(vJug == 2){
                if(vCpu == 3){
                    eventPerder();
                }else{
                    eventGanar();
                }
            }else if(vJug == 3){
                if(vCpu == 1){
                    eventPerder();
                }else{
                    eventGanar();
                }
            }
        }
    }
    
    private void leerRecordNivel(){
        try{
            FileInputStream fi = new FileInputStream(new File("Record.txt"));
            ObjectInputStream oi = new ObjectInputStream(fi);
            Record = (int) oi.readInt();
            Nivel = (int) oi.readInt();
            oi.close();
            fi.close();
        } catch (IOException e) {
                System.out.println("Error inicializando stream");
        }
        cajaRecord.setText(String.valueOf(Record));
        cajaNivel.setText(String.valueOf(Nivel));
    }
    
    private void sobreescribirRecordNivel(int RecordN, int NivelN){
        try{
            FileOutputStream f = new FileOutputStream(new File("Record.txt"));
            ObjectOutputStream o = new ObjectOutputStream(f);
            
            o.writeInt(RecordN);
            o.writeInt(NivelN);
            
            o.close();
            f.close();
        }catch (FileNotFoundException e) {
                System.out.println("Archivo no encontrado");
        } catch (IOException e) {
                System.out.println("Error inicializando stream");
        }
        cajaRecord.setText(String.valueOf(RecordN));
        cajaNivel.setText(String.valueOf(NivelN));
    }
    
    public void eventEmpate(){
        cajaResultado.setForeground(Color.BLACK);
        cajaResultado.setText("Empate");
    }
    
    public void eventPerder(){
        cajaResultado.setForeground(Color.decode("0xcf2828"));
        cajaResultado.setText("Perdiste");
        sobreescribirRecordNivel(Record, Nivel=0);
    }
    
    public void eventGanar(){
        cajaResultado.setForeground(Color.decode("0x319f0e"));
        cajaResultado.setText("Ganaste");
        if(Nivel == Record){
            sobreescribirRecordNivel(++Record, ++Nivel);
        }else{
            sobreescribirRecordNivel(Record, ++Nivel);
        }
    }
    
    public HashMap<Integer,String> elecciones = InicializarMapa();
    public int ele_jug = 0;
    public int ele_cpu = 0;
    public int Record = 0;
    public int Nivel = 0;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonPapel;
    private javax.swing.JButton buttonPiedra;
    private javax.swing.JButton buttonTijeras;
    private javax.swing.JLabel cajaNivel;
    private javax.swing.JFormattedTextField cajaRecord;
    private javax.swing.JLabel cajaResultado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel labelImagenCPU;
    private javax.swing.JLabel labelImagenJug;
    private javax.swing.JLabel labelTituloCPU;
    private javax.swing.JLabel labelTituloPlayer;
    // End of variables declaration//GEN-END:variables
}
